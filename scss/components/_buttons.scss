// Mixins utilisées sur le site

// Mixin donnant le style aux boutons du site
@mixin button {
  // Les éléments dans le bouton seront au milieu de ce dernier et ont une taille maximal donnée
  display: flex;
  justify-content: center;
  margin: 27px 50px 32px 57px;
  width: 100%;
  height: auto;
  max-width: 218px;
  max-height: 50px;
  &--style {
    // Le bouton à une ombre et une couleur liear gradient définit, quand on hover sur le bouton la couleur et l'ombre change en 400ms
    position: relative;
    z-index: 1;
    padding: 0px;
    border: 0px;
    width: 100%;
    max-width: 218px;
    border-radius: 50px;
    text-align: center;
    box-sizing: border-box;
    color: $btn-txt-color;
    box-shadow: 0px 4px 10px rgba($color: #000000, $alpha: 0.25);
    background: linear-gradient(-180.33deg, #ff79da -11.44%, #9356dc 123.93%);
    transition: background 400ms linear, box-shadow 400ms linear,
      opacity 400ms linear;

    &::after {
      content: "";
      position: absolute;
      border-radius: 50px;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(-180.33deg, #ff9de5 -11.44%, #a475e5 123.93%);
      box-shadow: 4px 4px 10px rgba($color: #000000, $alpha: 0.25);
      z-index: 0;
      opacity: 0;
      transition: opacity 400ms ease, background 400ms ease,
        box-shadow 400ms ease;
    }

    &:hover::after {
      opacity: 1;
    }
  }
  &--text {
    // Style des éléments text présent dans le bouton
    font-family: "Roboto", sans-serif;
    font-weight: 500;
    font-size: 16px;
    width: 100%;
    height: 100%;
    min-width: 180px;
    max-height: 24px;
    margin: 15.5px 0px;
    position: relative;
    z-index: 2;
  }
}

// Mixin qui crée le style de l'étiquette nouveau des restaurants
@mixin new {
  // L'étiquette passe devant le reste des éléments de la carte
  z-index: 1;
  max-width: 80px;
  max-height: 29px;
  width: 100%;
  height: 100%;
  // Couleur de fond verte et le text est blanc
  background: $new-bg-color;
  color: $new-txt-color;
  margin-top: 13px;
  position: absolute;
  right: 15px;
  &--style {
    // Taille donner au text
    font-size: 14px;
    font-weight: 500;
    padding: 7px 9.6px 6px 9px;
    margin: 0px;
  }
}

// Mixin qui donne un style à chaque carte d'un restaurant
@mixin restaurants_box_new {
  // On donne une taille, une couleur et une façon de gérer les éléments enfants de chaque box
  &__box {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
    max-height: 308px;
    border-radius: 15px;
    background-color: $btn-txt-color;

    // Style donner à la partie qui contiendra l'image de la box
    &__content1 {
      display: flex;
      border-radius: 15px 15px 0px 0px;
      height: 100%;
      width: 100%;
      max-height: 231px;
    }

    // Image de chaque restaurant et les dimensions qu'elle doit prendre dans la box
    &__img {
      box-sizing: border-box;
      border-radius: 15px 15px 0px 0px;
      height: 100%;
      width: 100%;
      max-height: 174px;
      z-index: 0;
      aspect-ratio: 4/2;
      object-fit: cover;
    }

    // Etiquette nouveau à inclure ou non en fonction du restaurant
    &__new {
      @include new;
    }

    // Partie qui va gérer le style du text de la box
    &__content2 {
      display: flex;
      max-height: 77px;
    }

    // Style du text dans la box, l'un pour le titre et l'autre pour la description
    &__text {
      width: 100%;
      margin: 16px 13px 12px 13px;
      &--style1 {
        font-size: 18px;
        font-weight: 700;
        margin: 0px 0px 5px 0px;
      }
      &--style2 {
        font-size: 17px;
        font-weight: 300;
      }
    }
  }

  // Partie qui va gérer le coeur qui va like le restaurant
  &__container {
    // Dimension du coeur et de sa façon de se placer par rapport aux autres éléments
    position: absolute;
    z-index: 2;
    bottom: 17px;
    right: 12px;
    display: flex;
    justify-content: flex-end;
    width: 100%;
    max-width: 21px;
    padding: 22px 25px 32px 13px;
    // Style donner au coeur
    & .fa-heart::before,
    .fa-heart {
      font-size: 21px;
      position: absolute;
      left: 6.5px;
      width: 100%;
      height: 100%;
      max-width: 22px;
      max-height: 21px;
    }
    // Deuxième coeurs coloré qui s'affiche seulement après validation de la checkbox
    & .fa-solid {
      display: none;
      background: transparent;
      transition: all 200ms ease-in-out;
    }
    & .fa-regular {
      color: $secondary-txt-color;
      transition: all 200ms ease-in-out;
    }
  }

  // Checkbox qui va serir à jouer l'animation mais qui est invisible pour éviter de surcharger la page
  &__checkbox {
    margin: 0px;
    width: 100%;
    height: 100%;
    max-width: 21px;
    display: none;
  }
  // Si la checkbox est checked et enfant de restaurants label alors le premier coeur disparait et laisse place au deuxième qui est coloré
  &__checkbox:checked + .restaurants__label {
    & .fa-solid,
    & .fa-solid::before {
      display: block;
      background: -webkit-linear-gradient(
        -300deg,
        #ff9de5 -11.44%,
        #a475e5 123.93%
      );
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    & .fa-regular {
      color: transparent;
    }
  }
  &__label {
    cursor: pointer;
  }
}

// Mixin qui définit le style de chaque carte d'un plat
@mixin meal_card {
  &__card {
    // On donne les dimensions et la façon de gérer les éléments de chaque carte
    margin: 12px 0px;
    position: relative;
    height: 100%;
    max-height: 42px;
    background-color: $btn-txt-color;
    border-radius: 20px;
    overflow: hidden;
    display: flex;
    align-items: center;
    padding: 13.5px 15px;
    // Ici on a l'animation de chaque carte, on a délay de l'animation qui augmente pour chaque carte
    animation: cards 1s ease-in-out both;
    @for $i from 1 through $num-cards {
      &--#{$i} {
        animation-delay: 50ms * $i;
      }
    }

    // Checkbox qui va servir à jouer l'animation mais qui n'a pas besoin d'être affiché
    &__checkbox {
      display: none;
    }

    &__label {
      // Label qui sert d'endroit pour cliquer et qui n'a pas de valeur visuel
      position: absolute;
      height: 100%;
      width: 100%;
      // Le curseur pointe quand on est sur le label
      cursor: pointer;
    }

    // Partie qui apparait et disparait quand on valide ou pas la checkbox
    &__label2 {
      position: absolute;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 59px;
      height: 100%;
      // Dimensions prédéfinis et couleur verte
      background-color: $new-bg-color;
      border-top-right-radius: 20px;
      border-bottom-right-radius: 20px;
      right: 0;
      // Il pivote en dehors et dans la div en fonction de checkbox
      transform: translateX(100%);
      transition: transform 0.35s ease-in-out;
      cursor: pointer;

      // Logo de validation FontAwesome
      &::after {
        content: "\f00c";
        font-family: "Font Awesome 5 Free";
        font-weight: 900;
        font-size: 16px;
        color: $new-bg-color;
        background-color: white;
        border-radius: 50%;
        padding: 5px;
      }
    }

    // Style du text qui est présent dans chaque carte, avec un titre et une description
    &__text {
        width: 100%;
        & h1 {
          font-size: 18px;
          font-weight: 500;
          margin: 0px;
        }
        & h1, & p {
          // Quand le text ne tient pas dans l'espace alloué alors il disparait et fait apparaitre des ellipsis
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            width: 100%;
            transition: width 0.5s ease-in-out;
        }
        & p {
            font-size: 14.7px;
        }
    }
    // Style que l'on donne au prix de chaque carte
    &__price {
        display: flex;
        align-items: flex-end;
        // Quand la checkbox se valide et que la validation apparait alors le prix se décale pour lui laisser de la place
        transform: translateX(0px);
        position: absolute;
        right: 15px;
        bottom: 10px;
        & h2 {
          font-size: 18px;
          font-weight: 500;
          margin: 0px;
        }
    }

    &__checkbox:checked ~ &__label2 {
        transform: translateX(0);
    }

    &__checkbox:checked ~ .menu__box__card__price {
      animation: price_mouvement 0.35s ease-in-out both;
 
  }

    &__checkbox:checked ~ .menu__box__card__text {
        width: calc(100% - 90px);
    }
  }
}

// Animation de chaque carte au démarrage de la page d'un restaurant
@keyframes cards {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    transform: translateX(0%);
  }
}

// Animation du mouvement du prix quand la partie validation arrive
@keyframes price_mouvement {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-160%);
  }
}